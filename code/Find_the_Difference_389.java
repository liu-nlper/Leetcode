import java.util.HashMap;
import java.util.Map;

/**
 * Created by ljx on 17-7-14.
 *
   Given two strings s and t which consist of only lowercase letters.

   String t is generated by random shuffling string s and then add one more letter at a random position.

   Find the letter that was added in t.

   Example:

   Input:
     s = "abcd"
     t = "abcde"

   Output:
     e

   Explanation:
     'e' is the letter that was added.
 */
public class Find_the_Difference_389 {

    /**
     * 思路１：计数t中所有的char，并存放在HashMap中，再遍历s，将HashMap中所有char出现次数减１，
     * 　　　　那么剩余次数不为0的字符即为后添加的。
     */
    public char findTheDifference(String s, String t) {
        Map<Character, Integer> map = new HashMap<>();
        for (char c : t.toCharArray()) {
            map.put(c, 1+map.getOrDefault(c, 0));
        }
        for (char c : s.toCharArray()) {
            map.put(c, map.get(c)-1);
        }
        char add = '1';
        for (char c : map.keySet()) {
            if (map.get(c) != 0)
                add = c;
        }
        return add;
    }

    /***
     * 思路２：分别将s,t所有字符转为int值相加，再将两者相减，转为char即为结果
     */
    public char findTheDifference_2(String s, String t) {
        int tTotal = 0, sTotal = 0;
        int n = s.length();
        for (int i=0; i<n; ++i) {
            sTotal += (int) s.charAt(i);
            tTotal += (int) t.charAt(i);
        }
        tTotal += (int) t.charAt(n);
        return (char)(tTotal - sTotal);
    }

    public static void main(String[] args) {
        String s = "abcd", t = "abcde";
        System.out.println(new Find_the_Difference_389().findTheDifference_2(s, t));
    }
}
